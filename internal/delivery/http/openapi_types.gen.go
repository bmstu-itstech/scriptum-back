// Package scriptumapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package scriptumapi

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for Status.
const (
	Finished Status = "finished"
	Pending  Status = "pending"
	Running  Status = "running"
)

// Defines values for Visibility.
const (
	Private Visibility = "private"
	Public  Visibility = "public"
)

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
}

// Field defines model for Field.
type Field struct {
	Description string `json:"description"`
	Name        string `json:"name"`
	Type        string `json:"type"`
	Unit        string `json:"unit"`
}

// FilePath defines model for FilePath.
type FilePath = string

// Job defines model for Job.
type Job struct {
	CreatedAt    time.Time  `json:"created_at"`
	Expected     []Field    `json:"expected"`
	FinishedAt   *time.Time `json:"finished_at,omitempty"`
	In           []Value    `json:"in"`
	JobId        JobId      `json:"job_id"`
	NeedToNotify bool       `json:"need_to_notify"`
	Path         FilePath   `json:"path"`
	ScriptId     ScriptId   `json:"script_id"`
	Status       Status     `json:"status"`
	UserId       UserId     `json:"user_id"`
}

// JobId defines model for JobId.
type JobId = int64

// Result defines model for Result.
type Result struct {
	Code         *int     `json:"code,omitempty"`
	ErrorMessage *string  `json:"error_message,omitempty"`
	Job          Job      `json:"job"`
	Out          *[]Value `json:"out,omitempty"`
}

// Script defines model for Script.
type Script struct {
	CreatedAt         time.Time  `json:"created_at"`
	FileId            int64      `json:"file_id"`
	InFields          []Field    `json:"in_fields"`
	OutFields         []Field    `json:"out_fields"`
	Owner             UserId     `json:"owner"`
	ScriptDescription string     `json:"script_description"`
	ScriptId          ScriptId   `json:"script_id"`
	ScriptName        string     `json:"script_name"`
	Visibility        Visibility `json:"visibility"`
}

// ScriptCreateData defines model for ScriptCreateData.
type ScriptCreateData struct {
	FileId            int64   `json:"file_id"`
	InFields          []Field `json:"in_fields"`
	OutFields         []Field `json:"out_fields"`
	ScriptDescription string  `json:"script_description"`
	ScriptName        string  `json:"script_name"`
}

// ScriptId defines model for ScriptId.
type ScriptId = int64

// ScriptRunData defines model for ScriptRunData.
type ScriptRunData struct {
	InParams     []Value `json:"in_params"`
	NeedToNotify *bool   `json:"need_to_notify,omitempty"`
}

// ScriptUpdateData defines model for ScriptUpdateData.
type ScriptUpdateData struct {
	InFields          *[]Field `json:"in_fields,omitempty"`
	OutFields         *[]Field `json:"out_fields,omitempty"`
	ScriptDescription *string  `json:"script_description,omitempty"`
	ScriptName        *string  `json:"script_name,omitempty"`
}

// Status defines model for Status.
type Status string

// UserId defines model for UserId.
type UserId = int64

// Value defines model for Value.
type Value struct {
	Data string `json:"data"`
	Type string `json:"type"`
}

// Visibility defines model for Visibility.
type Visibility string

// GetJobsSearchParams defines parameters for GetJobsSearch.
type GetJobsSearchParams struct {
	// State job state
	State Status `form:"state" json:"state"`
}

// GetScriptsSearchParams defines parameters for GetScriptsSearch.
type GetScriptsSearchParams struct {
	// ScriptName substring of script name
	ScriptName string `form:"script_name" json:"script_name"`
}

// PostScriptsUploadMultipartBody defines parameters for PostScriptsUpload.
type PostScriptsUploadMultipartBody struct {
	File openapi_types.File `json:"file"`
}

// PostScriptsJSONRequestBody defines body for PostScripts for application/json ContentType.
type PostScriptsJSONRequestBody = ScriptCreateData

// PostScriptsUploadMultipartRequestBody defines body for PostScriptsUpload for multipart/form-data ContentType.
type PostScriptsUploadMultipartRequestBody PostScriptsUploadMultipartBody

// PutScriptsIdJSONRequestBody defines body for PutScriptsId for application/json ContentType.
type PutScriptsIdJSONRequestBody = ScriptUpdateData

// PostScriptsIdStartJSONRequestBody defines body for PostScriptsIdStart for application/json ContentType.
type PostScriptsIdStartJSONRequestBody = ScriptRunData
